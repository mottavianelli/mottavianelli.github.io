---
layout: post
title:  "Enfoque"
date:   2021-12-16 01:00:00 -0300
categories: timag
---
El método para automatizar la detección y el conteo de parásitos y núcleos celulares en las imágenes de microscopía se construye a partir de la idea fundamental de segmentar las imágenes por niveles de gris y por áreas, como consecuencia de observar que las distintas componentes de las células presentan niveles de gris característicos (los núcleos de células muertas son más oscuros que los correspondientes a células vivas, así como la membrana es más clara que el citoplasma) y que los parásitos son considerablemente mas pequeños que los núcleos. 

Considerando que actualmente, el trabajo de identificación y conteo de parásitos desarrollado por el grupo de investigadores de IIBCE se lleva a cabo en Fiji (ImageJ), y es por lo tanto esta una herramienta familiar (considerando la posibilidad de que un resultado colateral del proyecto suponga el diseño de una herramienta interactiva para el conteo), una de las premisas del proyecto consiste precisamente en continuar trabajando en Fiji. Por lo tanto, se apunta a generar una macro de Fiji que automatice el conteo de núcleos de células vivas, núcleos de células muertas y parásitos.

Inicialmente, y debido a la escasa experiencia en el uso de la herramienta Fiji de los estudiantes responsables del proyecto, se propone utilizar Jython (una implementación de Python diseñada para correr sobre Java), y así generar scripts de Python para ejecutar desde Fiji. Sin embargo, una investigación preliminar conduce a un resulado concluyente: Jython no permite importar bibliotecas básicas y esenciales de Python, como NumPy. Por lo tanto, se decide avanzar con Fiji, condicionando tal decisión a encontrar limitaciones que impidan continuar el desarrollo de una solución. Finalmente, y con la excepción de los scripts para cuantificar la medida del error, el proyecto se desarrolla íntegramente en FIji. 

La etapa incial del método propuesto consiste en el preprocesamiento de las imágenes: dado que la información de color de la tinción no aporta información relevante, las imágenes se convierten a 8 bits, y se les aplica un mejoramiento de contraste ecualizando el histograma.  

La etapa subsiguiente consiste en establecer rangos de nivel de gris de umbralización. Segmentar por niveles de gris permite discriminar núcleos de células muertas (niveles más oscuros de gris), núcleos de células vivas con parásitos (contenidos en el mismo rango de niveles de girs), citoplasma y membrana. En este punto se encuentra uno de los principales obstáculos del proyecto: la segmentación en rangos de nivel de gris introduce mucho ruido, y no resulta sencillo diseñar estrategias para evitar que este ruido se confunda con los parásitos. Finalmente, de esta etapa de procesamiento se obtienen cuatro imágenes binarias con las representaciones de núcleos de células muertas, núcleos de células vivas y parásitos, citoplasma y membrana.

En la imagen binaria compuesta por los núcleos de células muertas detectados, se aplican operaciones de morfología matemática (aperturas y dilataciones) para reducir el ruido y ajustar el área de las componentes. También se aplica morfología matemática, con fines análogos, a las imagenes binarias de citoplasma y membrana.

La imagen binaria de núcleos de células vivas y parásitos es duplicada y procesada en paralelo, para tratar núcleos y parásitos por separado: por un lado, se aplica una operaciónn de morfología matemática para obtener los núcleos; por otro lado, se emplean filtros de forma para discirminar componentes conexas de acuerdo al área de las entidades detectadas, y así eliminar las de mayor área, para conservar los parásitos. A la imagen de parásitos resultante (donde persiste el ruido) se aplican máscaras para evitar detectar y contar componentes ubicadas sobre los núcleos y en la membrana, y considerar exlusivamente los parásitos detectados en el citoplasma.

Para los conteos de componentes se utilzia inicialmente un plugin de etiquetado de componentes conexas (MorphoLibJ), aunque finalmente se opta por utilizar las funciones de Analyze Particles incluidas en Fiji. 

Por último, se implementa una función en Python para medir el error; en particular, se consideran medidas de precisión y recall. La función desarrollada consiste en tomar los archivos XML de los conteos manuales, realizados con el plugin Cell counter por las investigadores del IIBCE, junto a las imágenes de núcleos y parásitos y los archivos CSV de los analisis de partículas obtenidos en Fiji. 

Para contar verdaderos positivos (TP) y falsos negativos (FN), se recorren las etiquetas del XML correspondiente a los valores de coordenadas, y se verifica si estas se corresponden con una región etiquetada (TP) o con el fondo (FN). Si la compoenente es contada como verdadero positivo, se "apaga" para no volver a contarla, en caso de que otra etiqueta vuelva a caer en la misma región. Para obtener los falsos positivos, se le restan los verdaderos positivos a la cantidad de compoenentes obtenidos en FIji 

Corresponde aclarar que el sistema de medida de error es pesimista, ya que puede darse que la etiqueta del XML no coincida exactamente con la región de componente detectada, y sea entonces contada como un falso negativo (al no coincidir etiqueta con región). En particular, para el caso de los parásitos, la medida de error no arroja buenos resultados, ya que las etiquetas no coinciden exactamente con la ubicación de los parásitos; simplemente se utilizan como indicadores para el conteo. 

También se implementó una macro en fiji que permite ver cualitativamente si las superficies estimadas son coherentes con las reales, esto se utilizó para darle un ajuste pequeño al resultado final; únicamente cualitativo porque en el conteo proporcionado no se contaba con medidas de área.

Para elegir el modelo se variaron los thresholds de los niveles de gris y el ratio de la morfología matemática, y midiendo el error resultante de cada combinación se tomó la mejor.

Finalmente, para elegir el modelo se ensayan múltiples variaciones de los rangos niveles de gris de los umbrales y del radio del elemento estructurante de la morfología matemática, y midiendo el error resultante de cada combinación se opta por la mejor combinación de parámetros. De todos modos, esto podría adaptarse a las preferencias del usuario. 

